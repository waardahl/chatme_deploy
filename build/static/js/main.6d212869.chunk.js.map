{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SideBarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/gmaps/CurrentLocation.js","components/gmaps/Gmaps.js","components/chats/ChatContainer.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","NEW_CHAT_USER","uuidv4","require","createChatNameFromUsers","users","excludedUser","arguments","length","undefined","filter","u","join","getTime","date","concat","getHours","getMinutes","slice","createMessage","_ref2","_ref2$message","message","_ref2$sender","sender","id","time","Date","now","createChat","_ref3","_ref3$messages","messages","_ref3$users","name","_ref3$isCommunity","isCommunity","typingUsers","createUser","_ref","_ref$name","_ref$socketId","socketId","_ref$coordinates","coordinates","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","user","isUser","setError","state","nickname","handleSubmit","e","preventDefault","socket","currentPos","emit","handleChange","setState","target","value","error","setUserCoordinates","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","_Component","apply","inherits","createClass","key","_this$props","chats","lastMessage","active","onClick","console","log","toUpperCase","Fragment","defaultProps","SideBar","reciever","onSendPrivateMessage","addChatForUser","username","setActiveSideBar","CHATS","newSideBar","activeSideBar","triggerShowMap","setActiveChat","logout","USERS","refs","map","chat","SideBarOption_SideBarOption","get","last","differenceBy","otherUser","title","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","mes","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","mapStyles","position","width","height","CurrentLocation","_React$Component","currentLocation","centerAroundCurrentLocation","loadMap","google","recenterMap","maps","mapRef","node","ReactDOM","findDOMNode","zoom","_this$state$currentLo","center","LatLng","mapConfig","assign","Map","current","panTo","children","React","Children","c","cloneElement","mapCenter","style","renderChildren","initialCenter","visible","MapContainer","createMarkers","table","i","push","dist","onMarkerClickTrue","marker","selectedPlace","activeMarker","showingInfoWindow","showChatButton","onMarkerClickFalse","onClose","showButtonInfoWindow","gmaps_CurrentLocation","GoogleApiWrapper","apiKey","ChatContainer","sendOpenPrivateMessage","activeChat","addUserToChat","chatId","newUser","newChats","toConsumableArray","removeUsersFromChat","removedUsers","newUsers","difference","resetChat","addChat","reset","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","includes","showMap","showMapUserClick","initSocket","off","values","_this3","_this$props2","SideBar_SideBar","Messages_Messages","MessageInput_MessageInput","Gmaps","socketUrl","Layout","io","reconnect","ChatContainer_ChatContainer","LoginForm_LoginForm","App","Layout_Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.6d212869.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n\tLOGOUT:\"LOGOUT\",\r\n\tPRIVATE_MESSAGE:\"PRIVATE_MESSAGE\",\r\n\tNEW_CHAT_USER: \"NEW_CHAT_USER\"\r\n}","const uuidv4 = require('uuid/v4')\r\n\r\n/*\r\n*\tcreateUser\r\n*\tCreates a user.\r\n*\t@prop id {string}\r\n*\t@prop name {string}\r\n*\t@param {object} \r\n*\t\tname {string}\r\n*/\r\nconst createUser = ({ name = \"\", socketId = null, coordinates = {} } = {}) => (\r\n\t{\r\n\t\tid: uuidv4(),\r\n\t\tname,\r\n\t\tsocketId,\r\n\t\tcoordinates\r\n\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateMessage\r\n*\tCreates a messages object.\r\n* \t@prop id {string}\r\n* \t@prop time {Date} the time in 24hr format i.e. 14:22\r\n* \t@prop message {string} actual string message\r\n* \t@prop sender {string} sender of the message\r\n*\t@param {object} \r\n*\t\tmessage {string}\r\n*\t\tsender {string}\r\n*/\r\nconst createMessage = ({ message = \"\", sender = \"\" } = {}) => (\r\n\t{\r\n\t\tid: uuidv4(),\r\n\t\ttime: getTime(new Date(Date.now())),\r\n\t\tmessage,\r\n\t\tsender\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateChat\r\n*\tCreates a Chat object\r\n* \t@prop id {string}\r\n* \t@prop name {string}\r\n* \t@prop messages {Array.Message}\r\n* \t@prop users {Array.string}\r\n*\t@param {object} \r\n*\t\tmessages {Array.Message}\r\n*\t\tname {string}\r\n*\t\tusers {Array.string} \r\n*/\r\nconst createChat = ({ messages = [], name = \"Community\", users = [], isCommunity = false } = {}) => (\r\n\t{\r\n\t\tid: uuidv4(),\r\n\t\tname: isCommunity ? \"Community\" : createChatNameFromUsers(users),\r\n\t\tmessages,\r\n\t\tusers,\r\n\t\ttypingUsers: [],\r\n\t\tisCommunity\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateChatNameFromUsers\r\n*\t@param users {Array.string}\r\n*\t@param excludedUser {string} user to exclude from list of names\r\n*\t@return {string} users names concatenated by a '&' or 'Empty Chat' if no users\r\n*/\r\n\r\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\r\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Users\"\r\n}\r\n\r\n\r\n/*\r\n*\t@param date {Date}\r\n*\t@return a string represented in 24hr time i.e. '11:30', '19:30'\r\n*/\r\nconst getTime = (date) => {\r\n\treturn `${date.getHours()}:${(\"0\" + date.getMinutes()).slice(-2)}`\r\n}\r\n\r\nmodule.exports = {\r\n\tcreateMessage,\r\n\tcreateChat,\r\n\tcreateUser,\r\n\tcreateChatNameFromUsers\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events'\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tnickname:\"\",\r\n\t\t  error:\"\",\r\n\t\t  currentPos: {}\r\n\t  };\r\n\t}\r\n\r\n\tsetUser = ({user, isUser})=>{\r\n\t\tif(isUser){\r\n\t\t\tthis.setError(\"Username already taken\")\r\n\t\t}else if(this.state.nickname === \"\"){\r\n\t\t\tthis.setError(\"Got a name?\")\r\n\t\t}else{\r\n\t\t\tthis.setError(\"\")\r\n\t\t\tthis.props.setUser(user)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\r\n\t\tconst { socket } = this.props\r\n\t\tconst { nickname } = this.state\r\n\t\tconst { currentPos } = this.state\r\n\r\n\t\t \r\n\r\n\t\tsocket.emit(VERIFY_USER, nickname, currentPos, this.setUser)\r\n\t}\r\n\r\n\thandleChange = (e)=>{\r\n\t\tthis.setState({nickname:e.target.value})\r\n\t}\r\n\r\n\tsetError = (error)=>{\r\n\t\tthis.setState({error})\r\n\t}\r\n\r\n\tsetUserCoordinates = () => {\r\n\t\tif (navigator && navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(pos => {\r\n\t\t\t\t   const coords = pos.coords;\r\n\t\t\t\t   this.setState({\r\n\t\t\t\t\t currentPos: {\r\n\t\t\t\t\t   lat: coords.latitude,\r\n\t\t\t\t\t   lng: coords.longitude\r\n\t\t\t\t\t }\t\r\n\t\t\t\t   });\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tconst { nickname, error } = this.state;\r\n\t\tthis.setUserCoordinates()\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Hi! what's your name?</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input)=>{ this.textInput = input }} \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'name goes here'}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"error\">{error ? error:null}</div>\r\n\r\n\t\t\t\t\t\t<div className=\"centerit\">\r\n\t\t\t\t\t\t\t<button className=\"button\">enter</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport class SideBarOption extends Component {\r\n  static propTypes = {\r\n      name: PropTypes.string.isRequired,\r\n      chats: PropTypes.array.isRequired,\r\n      lastMessage: PropTypes.string,\r\n      active: PropTypes.bool,\r\n      onClick: PropTypes.func\r\n  }\r\n\r\n  static defaultProps = {\r\n      lastMessage: \"\",\r\n      active: false,\r\n      \r\n      onClick: () => {}\r\n  }\r\n\r\n    render() {\r\n        const { chats, name, lastMessage, active, onClick } = this.props\r\n        console.log(chats)\r\n        if (name !== \"Empty Users\" || chats.name !== name ){\r\n            return (\r\n                <div\r\n                    className={`user ${active ? 'active': ''}`}\r\n                    onClick={ onClick }\r\n                >\r\n                    <div className=\"user-photo\">{name[0].toUpperCase()}</div>\r\n                    <div className=\"user-info\">\r\n                        <div className=\"name\">{name}</div>\r\n                        {lastMessage && <div className=\"last-message\">{lastMessage}</div>}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        }else{\r\n            return (<></>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { SideBarOption } from './SideBarOption'\r\nimport { get, last, differenceBy } from 'lodash'\r\nimport { createChatNameFromUsers } from '../../Factories'\r\n\r\n\r\n\r\nexport default class SideBar extends Component {\r\n\tstatic type = {\r\n\t\tCHATS: \"chats\",\r\n\t\tUSERS: \"users\"\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\treciever: \"\",\r\n\t\t\tactiveSideBar: SideBar.type.CHATS,\r\n\t\t}\r\n\r\n\t}\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { reciever } = this.state\r\n\t\tconst { onSendPrivateMessage } = this.props\r\n\r\n\t\tonSendPrivateMessage(reciever)\r\n\t\tthis.setState({ reciever: \"\" })\r\n\r\n\t}\r\n\taddChatForUser = (username) => {\r\n\t\tthis.props.onSendPrivateMessage(username)\r\n\t\tthis.setActiveSideBar(SideBar.type.CHATS)\r\n\t}\r\n\tsetActiveSideBar = (newSideBar) => {\r\n\t\tthis.setState({ activeSideBar: newSideBar })\r\n\t\tthis.props.triggerShowMap()\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { chats, user, setActiveChat, logout, users} = this.props\r\n\t\tconst { reciever, activeSideBar } = this.state\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\" className=\"noscroll\">\r\n\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t<div className=\"app-name\">chatMe</div>\r\n\t\t\t\t\t<div className=\"menu\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"search\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={reciever}\r\n\t\t\t\t\t\tonChange={(e) => { this.setState({ reciever: e.target.value }) }} />\r\n\t\t\t\t\t<input type=\"submit\" className=\"plus\" value=\"+\" ></input>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"side-bar-select\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => { this.setActiveSideBar(SideBar.type.CHATS) }}\r\n\t\t\t\t\t\tclassName={`side-bar-select__option ${(activeSideBar === SideBar.type.CHATS) ? 'active' : ''}`}>\r\n\t\t\t\t\t\t<span>Chats</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => { this.setActiveSideBar(SideBar.type.USERS) }}\r\n\t\t\t\t\t\tclassName={`side-bar-select__option ${(activeSideBar === SideBar.type.USERS) ? 'active' : ''}`}>\r\n\t\t\t\t\t\t<span >Users</span>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"users\"\r\n\t\t\t\t\tref='users'\r\n\t\t\t\t\tonClick={(e) => { (e.target === this.refs.user) && setActiveChat(null) }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveSideBar === SideBar.type.CHATS ?\r\n\t\t\t\t\t\t\tchats.map((chat) => {\r\n\t\t\t\t\t\t\t\tif (chat.name) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\tconsole.log(users + user.name),\r\n\t\t\t\t\t\t\t\t\t\t<SideBarOption\r\n\t\t\t\t\t\t\t\t\t\t\tkey={chat.id}\r\n\t\t\t\t\t\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\t\t\t\t\t\tname={chat.isCommunity ? chat.name : createChatNameFromUsers(chat.users, user.name)}\r\n\t\t\t\t\t\t\t\t\t\t\tlastMessage={get(last(chat.messages), 'message', '')}\r\n\t\t\t\t\t\t\t\t\t\t\t//active={activeChat.id === chat.id}\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => { this.props.setActiveChat(chat) }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tdifferenceBy(users, [user], 'name').map((otherUser) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<SideBarOption\r\n\t\t\t\t\t\t\t\t\t\tkey={otherUser.id}\r\n\t\t\t\t\t\t\t\t\t\tname={otherUser.name}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => { this.addChatForUser(otherUser.name) }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t<div onClick={() => { logout() }} title=\"Logout\" className=\"logout\">\r\n\t\t\t\t\t\t<p>log out</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default function({name, numberOfUsers}) {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\"></div>\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\t\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\t\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = ()=>{\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\t\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = ()=>{\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form \r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Type here\"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t\t> Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '69.3%',\r\n    height: '100%'\r\n  }\r\n};\r\nexport class CurrentLocation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentLocation: \r\n        this.props.currentLocation\r\n      \r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n          this.setState({\r\n            currentLocation: this.props.user.coordinates\r\n          });\r\n    }\r\n  \r\n    this.loadMap();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n\r\n      const mapRef = this.refs.map;\r\n\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      const { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom\r\n        }\r\n      );\r\n      // maps.Map() is constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n    }\r\n  }\r\n\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n\r\n    if (!children) return;\r\n\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n\r\n    return (\r\n      <div>\r\n        <div style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: -1.2884,\r\n    lng: 36.8233\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n","import React, { Component } from 'react';\r\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from './CurrentLocation';\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showingInfoWindow: false,\r\n      showChatButton: true,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      currentLocation: this.props.user.coordinates\r\n \r\n  };\r\n}\r\n\r\n  createMarkers = () => {\r\n    const { users } = this.props;\r\n    const { user } = this.props;\r\n    let table = [];\r\n\r\n    for (var i = 0; i<users.length; i++) {\r\n      if (users[i].name !== user.name) {\r\n      table.push(\r\n        <Marker onClick={this.onMarkerClickTrue} name={\"Here's you friend \" + users[i].name } position = {users[i].coordinates} key = {i} />\r\n\r\n      );} \r\n    }\r\n    return table\r\n  }\r\n\r\n  onMarkerClickTrue = (props, marker, e) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n      showChatButton: true\r\n    });\r\n  }\r\n\r\n  onMarkerClickFalse = (props, marker, e) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n      showChatButton: false\r\n    });\r\n  }\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  showButtonInfoWindow = () => {\r\n    let table = [];\r\n    if (this.state.showChatButton === true) {\r\n      table.push(<button key={1}>Start baby chat</button>);\r\n     }\r\n     return table\r\n  }\r\n\r\n  render() {\r\n    const { user, users } = this.props;\r\n\r\n    return (\r\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google} user={user} users={users} currentLocation = {this.state.currentLocation}>\r\n      <Marker onClick={this.onMarkerClickFalse} name={\"you are here \" + user.name }  /> \r\n        {/* generates markers for other users */}\r\n      {this.createMarkers()}\r\n\r\n      <InfoWindow\r\n        marker={this.state.activeMarker}\r\n        visible={this.state.showingInfoWindow}\r\n        onClose={this.onClose}\r\n      >\r\n        <div className=\"infoboxLocation\">\r\n          <h4>{this.state.selectedPlace.name}</h4>\r\n          {/* onClick={this.addChatForUser(otherUser.name)} */}\r\n\r\n          {this.showButtonInfoWindow()}\r\n\r\n        </div>\r\n      </InfoWindow> \r\n    </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAvuy-sA7Rllb8GKEsLNpcw5OAd4ff8ecc'\r\n})(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport SideBar from '../sidebar/SideBar'\r\nimport {\r\n\tCOMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED,\r\n\tTYPING, PRIVATE_MESSAGE, USER_CONNECTED, USER_DISCONNECTED,\r\n\tNEW_CHAT_USER\r\n} from '../../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../messages/Messages'\r\nimport MessageInput from '../messages/MessageInput'\r\nimport MapContainer from '../gmaps/Gmaps'\r\nimport { values, difference, differenceBy } from 'lodash'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tchats: [],\r\n\t\t\tusers: [],\r\n\t\t\tactiveChat: null,\r\n\t\t\tshowMap: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tthis.initSocket(socket)\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.off(PRIVATE_MESSAGE)\r\n\t\tsocket.off(USER_CONNECTED)\r\n\t\tsocket.off(USER_DISCONNECTED)\r\n\t\tsocket.off(NEW_CHAT_USER)\r\n\t}\r\n\tinitSocket(socket) {\r\n\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\tsocket.on(PRIVATE_MESSAGE, this.addChat)\r\n\t\tsocket.on('connect', () => {\r\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\t})\r\n\t\tsocket.on(USER_CONNECTED, (users) => {\r\n\t\t\tthis.setState({ users: values(users) })\r\n\r\n\t\t})\r\n\t\tsocket.on(USER_DISCONNECTED, (users) => {\r\n\t\t\tconst removedUsers = differenceBy(this.state.users, values(users), 'id')\r\n\t\t\tthis.removeUsersFromChat(removedUsers)\r\n\t\t\tthis.setState({ users: values(users) })\r\n\t\t})\r\n\t\tsocket.on(NEW_CHAT_USER, this.addUserToChat)\r\n\t}\r\n\r\n\tsendOpenPrivateMessage = (reciever) => {\r\n\t\tconst { socket, user } = this.props\r\n\t\tconst { activeChat } = this.state\r\n\t\tsocket.emit(PRIVATE_MESSAGE, { reciever, sender: user.name, activeChat })\r\n\t}\r\n\taddUserToChat = ({ chatId, newUser }) => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map(chat => {\r\n\t\t\tif (chat.id === chatId) {\r\n\t\t\t\treturn Object.assign({}, chat, { users: [...chat.users, newUser] })\r\n\t\t\t}\r\n\t\t\treturn chat\r\n\t\t})\r\n\t\tthis.setState({ chats: newChats })\r\n\t}\r\n\tremoveUsersFromChat = removedUsers => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map(chat => {\r\n\t\t\tlet newUsers = difference(chat.users, removedUsers.map(u => u.name))\r\n\t\t\treturn Object.assign({}, chat, { users: newUsers })\r\n\t\t})\r\n\t\tthis.setState({ chats: newChats })\r\n\t}\r\n\t/*\r\n\t*\tReset the chat back to only the chat passed in.\r\n\t* \t@param chat {Chat}\r\n\t*/\r\n\tresetChat = (chat) => {\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds chat to the chat container, if reset is true removes all chats\r\n\t*\tand sets that chat to the main chat.\r\n\t*\tSets the message and typing socket events for the chat.\r\n\t*\t\r\n\t*\t@param chat {Chat} the chat to be added.\r\n\t*\t@param reset {boolean} if true will set the chat as the only chat.\r\n\t*/\r\n\taddChat = (chat, reset = false) => {\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({ chats: newChats })\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\t/*\r\n\t* \tReturns a function that will \r\n\t*\tadds message to chat with the chatId passed in. \r\n\t*\r\n\t* \t@param chatId {number}\r\n\t*/\r\n\taddMessageToChat = (chatId) => {\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat) => {\r\n\t\t\t\tif (chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({ chats: newChats })\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = (chatId) => {\r\n\t\treturn ({ isTyping, user }) => {\r\n\t\t\tif (user !== this.props.user.name) {\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat) => {\r\n\t\t\t\t\tif (chat.id === chatId) {\r\n\t\t\t\t\t\tif (isTyping && !chat.typingUsers.includes(user)) {\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t} else if (!isTyping && chat.typingUsers.includes(user)) {\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({ chats: newChats })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds a message to the specified chat\r\n\t*\t@param chatId {number}  The id of the chat to be added to.\r\n\t*\t@param message {string} The message to be added to the chat.\r\n\t*/\r\n\tsendMessage = (chatId, message) => {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, { chatId, message })\r\n\t}\r\n\r\n\t/*\r\n\t*\tSends typing status to server.\r\n\t*\tchatId {number} the id of the chat being typed in.\r\n\t*\ttyping {boolean} If the user is typing still or not.\r\n\t*/\r\n\tsendTyping = (chatId, isTyping) => {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, { chatId, isTyping })\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat) => {\r\n\t\tthis.setState({ activeChat })\r\n\t\tthis.setState({ showMap: false})\r\n\r\n\t}\r\n\r\n\tshowMapUserClick = () => {\r\n\t\tthis.setState({showMap: true}\r\n\t\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat, users, showMap } = this.state\r\n\t\tconsole.log(user)\r\n\t\tconsole.log(users)\r\n\t\tif (activeChat !== null && showMap === false) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t\ttriggerShowMap={this.showMapUserClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t<ChatHeading \r\n\t\t\t\t\t\t\tname={activeChat.name} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MessageInput\r\n\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t(message) => {\r\n\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t(isTyping) => {\r\n\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (showMap === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t\ttriggerShowMap={this.showMapUserClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t<div className=\"chat-room choose\">\t\t\t\r\n\t\t\t\t\t\t<MapContainer\r\n\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\t/>    \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\t\t\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t\ttriggerShowMap={this.showMapUserClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t<div className=\"chat-room choose\">\t\t\t\r\n\t\t\t\t\t\t<MapContainer\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\t/>    \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chats/ChatContainer'\r\n\r\n\r\nconst socketUrl = \"/\"\r\nexport default class Layout extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tsocket:null,\r\n\t\t  user:null\r\n\t\t  \r\n\r\n\t\t  \r\n\t  };\r\n\t}\r\n\r\n\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.initSocket()\r\n\t}\r\n\r\n\t/*\r\n\t*\tConnect to and initializes the socket.\r\n\t*/\r\n\tinitSocket = ()=>{\r\n\t\tconst socket = io(socketUrl)\r\n\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tif(this.state.user){\r\n\t\t\t\tthis.reconnect(socket)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(\"Connected\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.setState({socket})\r\n\t}\r\n\t\r\n\r\n\treconnect = (socket) => {\r\n\t\tsocket.emit(VERIFY_USER, this.state.user.name, this.state.user.coordinates, ({ isUser, user })=>{\r\n\t\t\tif(isUser){\r\n\t\t\t\tthis.setState({ user: null })\r\n\t\t\t}else{\r\n\t\t\t\tthis.setUser(user)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\t* \tSets the user property in state \r\n\t*\t@param user {id:number, name:string}\r\n\t*/\t\r\n\tsetUser = (user)=>{\r\n\t\tconst { socket } = this.state;\r\n\t\tsocket.emit(USER_CONNECTED, user);\r\n\t\tthis.setState({user})\r\n\t\tconsole.log(user);\r\n\t\t\r\n\t}\r\n\r\n\r\n\t/*\r\n\tSets the user property in state to null.\r\n\t*/\r\n\tlogout = ()=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(LOGOUT)\r\n\t\tthis.setState({user:null})\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { socket, user } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{\r\n\t\t\t\t\t!user ?\t\r\n\t\t\t\t\t<LoginForm \r\n\t\t\t\t\t\tsocket={socket} \r\n\t\t\t\t\t\tsetUser={this.setUser} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ChatContainer \r\n\t\t\t\t\t\tsocket={socket} \r\n\t\t\t\t\t\tuser={user} \r\n\t\t\t\t\t\tlogout={this.logout} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout'\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}