{"version":3,"sources":["Events.js","components/LoginForm.js","components/chats/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","_ref","user","isUser","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","id","onChange","placeholder","Component","SideBar","reciever","onSendPrivateMessage","_this$props","chats","activeChat","setActiveChat","logout","onClick","refs","map","chat","name","lastMessage","messages","length","chatSideName","users","find","classNames","key","concat","toUpperCase","message","title","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","typingUsers","mes","sender","time","MessageInput","sendMessage","sendTyping","lastUpdateTime","Date","now","isTyping","startCheckingTyping","console","log","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","ChatContainer","sendOpenPrivateMessage","resetChat","addChat","reset","arguments","undefined","newChats","toConsumableArray","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","chatId","push","includes","filter","u","initSocket","_this3","_this$props2","SideBar_SideBar","Messages_Messages","MessageInput_MessageInput","socketUrl","Layout","io","reconnect","ChatContainer_ChatContainer","LoginForm_LoginForm","App","Layout_Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.54217518.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n\tLOGOUT:\"LOGOUT\",\r\n\tPRIVATE_MESSAGE:\"PRIVATE_MESSAGE\"\r\n}","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events'\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tnickname:\"\",\r\n\t  \terror:\"\"\r\n\t  };\r\n\t}\r\n\r\n\tsetUser = ({user, isUser})=>{\r\n\r\n\t\tif(isUser){\r\n\t\t\tthis.setError(\"User name taken\")\r\n\t\t}else{\r\n\t\t\tthis.setError(\"\")\r\n\t\t\tthis.props.setUser(user)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tconst { socket } = this.props\r\n\t\tconst { nickname } = this.state\r\n\t\tsocket.emit(VERIFY_USER, nickname, this.setUser)\r\n\t}\r\n\r\n\thandleChange = (e)=>{\r\n\t\tthis.setState({nickname:e.target.value})\r\n\t}\r\n\r\n\tsetError = (error)=>{\r\n\t\tthis.setState({error})\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tconst { nickname, error } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Hi! what's your name?</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input)=>{ this.textInput = input }} \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'name goes here... '}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"error\">{error ? error:null}</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n// import FaSearch from 'react-icons/lib/fa/search'\r\n// import MdEject from 'react-icons/lib/md/eject'\r\n\r\n\r\nexport default class SideBar extends Component{\r\n\tconstructor(props){\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\treciever:\"\"\r\n\t\t}\r\n\t}\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { reciever } = this.state\r\n\t\tconst { onSendPrivateMessage } = this.props\r\n\r\n\t\tonSendPrivateMessage(reciever)\r\n\t\tthis.setState({reciever:\"\"})\r\n\t}\r\n\trender(){\r\n\t\tconst { chats, activeChat, user, setActiveChat, logout} = this.props\r\n\t\tconst { reciever } = this.state\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\">\r\n\t\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t\t<div className=\"app-name\">chatMe</div>\r\n\t\t\t\t\t\t<div className=\"menu\">\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<form onSubmit={this.handleSubmit} className=\"search\">\r\n\t\t\t\t\t\t<i className=\"search-icon\"></i>\r\n\t\t\t\t\t\t<input \r\n\t\t\t\t\t\t\tplaceholder=\"Search\" \r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tvalue={reciever}\r\n\t\t\t\t\t\t\tonChange={(e)=>{this.setState({reciever:e.target.value}) }}/>\r\n\t\t\t\t\t\t<div className=\"plus\"></div>\r\n\t\t\t\t\t</form>\r\n\t\t\t\t\t<div \r\n\t\t\t\t\t\tclassName=\"users\" \r\n\t\t\t\t\t\tref='users' \r\n\t\t\t\t\t\tonClick={(e)=>{ (e.target === this.refs.user) && setActiveChat(null) }}>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tchats.map((chat)=>{\r\n\t\t\t\t\t\t\tif(chat.name){\r\n\t\t\t\t\t\t\t\tconst lastMessage = chat.messages[chat.messages.length - 1];\r\n\t\t\t\t\t\t\t\tconst chatSideName = chat.users.find((name)=>{\r\n\t\t\t\t\t\t\t\t\treturn name !== user.name\r\n\t\t\t\t\t\t\t\t}) || \"Community\" \r\n\t\t\t\t\t\t\t\tconst classNames = (activeChat && activeChat.id === chat.id) ? 'active' : ''\r\n\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t<div \r\n\t\t\t\t\t\t\t\t\tkey={chat.id} \r\n\t\t\t\t\t\t\t\t\tclassName={`user ${classNames}`}\r\n\t\t\t\t\t\t\t\t\tonClick={ ()=>{ setActiveChat(chat) } }\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-photo\">{chatSideName[0].toUpperCase()}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"user-info\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{chatSideName}</div>\r\n\t\t\t\t\t\t\t\t\t\t{lastMessage && <div className=\"last-message\">{lastMessage.message}</div>}\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t})\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t\t<div onClick={()=>{logout()}} title=\"Logout\" className=\"logout\">\r\n\t\t\t\t\t\t\t<h6>log out</h6>\r\n\t\t\t\t\t\t\t{/* <MdEject/>\t */}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default function({name, numberOfUsers}) {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\"></div>\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\t\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\t\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Typing\");\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\t\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = ()=>{\r\n\t\tconsole.log(\"Stop Typing\");\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form \r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Type here\"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t\t> Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport SideBar from './SideBar'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED, TYPING, PRIVATE_MESSAGE } from '../../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../messages/Messages'\r\nimport MessageInput from '../messages/MessageInput'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\t\r\n\t\r\n\t  this.state = {\r\n\t  \tchats:[],\r\n\t  \tactiveChat:null\r\n\t  };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tthis.initSocket(socket)\r\n\t}\r\n\r\n\tinitSocket(socket){\r\n\t\t// eslint-disable-next-line\r\n\t\tconst { user } = this.props\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\tsocket.on(PRIVATE_MESSAGE, this.addChat)\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\t})\r\n\t}\r\n\r\n\tsendOpenPrivateMessage = (reciever) => {\r\n\t\tconst { socket, user } = this.props\r\n\t\tconst { activeChat } = this.state\r\n\t\tsocket.emit(PRIVATE_MESSAGE, {reciever, sender:user.name, activeChat})\r\n\t}\r\n\t/*\r\n\t*\tReset the chat back to only the chat passed in.\r\n\t* \t@param chat {Chat}\r\n\t*/\r\n\tresetChat = (chat)=>{\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds chat to the chat container, if reset is true removes all chats\r\n\t*\tand sets that chat to the main chat.\r\n\t*\tSets the message and typing socket events for the chat.\r\n\t*\t\r\n\t*\t@param chat {Chat} the chat to be added.\r\n\t*\t@param reset {boolean} if true will set the chat as the only chat.\r\n\t*/\r\n\taddChat = (chat, reset=false)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({chats:newChats, activeChat:reset ? chat : this.state.activeChat})\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\t/*\r\n\t* \tReturns a function that will \r\n\t*\tadds message to chat with the chatId passed in. \r\n\t*\r\n\t* \t@param chatId {number}\r\n\t*/\r\n\taddMessageToChat = (chatId)=>{\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\tif(chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({chats:newChats})\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = (chatId) =>{\r\n\t\treturn ({isTyping, user})=>{\r\n\t\t\tif(user !== this.props.user.name){\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\t\tif(chat.id === chatId){\r\n\t\t\t\t\t\tif(isTyping && !chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t}else if(!isTyping && chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({chats:newChats})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds a message to the specified chat\r\n\t*\t@param chatId {number}  The id of the chat to be added to.\r\n\t*\t@param message {string} The message to be added to the chat.\r\n\t*/\r\n\tsendMessage = (chatId, message)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, {chatId, message} )\r\n\t}\r\n\r\n\t/*\r\n\t*\tSends typing status to server.\r\n\t*\tchatId {number} the id of the chat being typed in.\r\n\t*\ttyping {boolean} If the user is typing still or not.\r\n\t*/\r\n\tsendTyping = (chatId, isTyping)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, {chatId, isTyping})\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat)=>{\r\n\t\tthis.setState({activeChat})\r\n\t}\r\n\trender() {\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<SideBar\r\n\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\tchats={chats}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveChat !== null ? (\r\n\r\n\t\t\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t\t\t<ChatHeading name={activeChat.name} />\r\n\t\t\t\t\t\t\t\t<Messages \r\n\t\t\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MessageInput \r\n\t\t\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t\t\t(message)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t\t\t(isTyping)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\t<div className=\"chat-room choose\">\r\n\t\t\t\t\t\t\t<h3>Choose a chat!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chats/ChatContainer'\r\n\r\nconst socketUrl = \"/\"\r\nexport default class Layout extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tsocket:null,\r\n\t  \tuser:null\r\n\t  };\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.initSocket()\r\n\t}\r\n\r\n\t/*\r\n\t*\tConnect to and initializes the socket.\r\n\t*/\r\n\tinitSocket = ()=>{\r\n\t\tconst socket = io(socketUrl)\r\n\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tif(this.state.user){\r\n\t\t\t\tthis.reconnect(socket)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(\"Connected\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.setState({socket})\r\n\t}\r\n\r\n\treconnect = (socket) => {\r\n\t\tsocket.emit(VERIFY_USER, this.state.user.name, ({ isUser, user })=>{\r\n\t\t\tif(isUser){\r\n\t\t\t\tthis.setState({ user: null })\r\n\t\t\t}else{\r\n\t\t\t\tthis.setUser(user)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\t* \tSets the user property in state \r\n\t*\t@param user {id:number, name:string}\r\n\t*/\t\r\n\tsetUser = (user)=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(USER_CONNECTED, user);\r\n\t\tthis.setState({user})\r\n\t}\r\n\r\n\t/*\r\n\tSets the user property in state to null.\r\n\t*/\r\n\tlogout = ()=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(LOGOUT)\r\n\t\tthis.setState({user:null})\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\t// eslint-disable-next-line\r\n\t\tconst { title } = this.props\r\n\t\tconst { socket, user } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{\r\n\t\t\t\t\t!user ?\t\r\n\t\t\t\t\t<LoginForm socket={socket} setUser={this.setUser} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ChatContainer socket={socket} user={user} logout={this.logout}/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout'\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}