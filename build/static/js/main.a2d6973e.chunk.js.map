{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SideBarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/gmaps/CurrentLocation.js","components/gmaps/Gmaps.js","components/chats/ChatContainer.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","NEW_CHAT_USER","uuidv4","require","createChatNameFromUsers","users","excludedUser","arguments","length","undefined","filter","u","join","getTime","date","concat","getHours","getMinutes","slice","createMessage","_ref2","_ref2$message","message","_ref2$sender","sender","id","time","Date","now","createChat","_ref3","_ref3$messages","messages","_ref3$users","name","_ref3$isCommunity","isCommunity","typingUsers","createUser","_ref","_ref$name","_ref$socketId","socketId","_ref$coordinates","coordinates","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","user","isUser","setError","state","nickname","handleSubmit","e","preventDefault","socket","currentPos","emit","handleChange","setState","target","value","error","setUserCoordinates","navigator","geolocation","getCurrentPosition","pos","coords","lat","latitude","lng","longitude","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","_Component","apply","inherits","createClass","key","_this$props","lastMessage","active","onClick","toUpperCase","Fragment","defaultProps","SideBar","reciever","onSendPrivateMessage","addChatForUser","username","setActiveSideBar","CHATS","newSideBar","activeSideBar","triggerShowMap","chats","setActiveChat","logout","USERS","refs","map","chat","SideBarOption_SideBarOption","get","last","differenceBy","otherUser","title","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","mes","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","mapStyles","position","width","height","CurrentLocation","_React$Component","currentLocation","centerAroundCurrentLocation","loadMap","google","recenterMap","maps","mapRef","node","ReactDOM","findDOMNode","zoom","_this$state$currentLo","center","LatLng","mapConfig","assign","Map","current","panTo","children","React","Children","c","cloneElement","mapCenter","style","renderChildren","initialCenter","visible","MapContainer","createMarkers","table","i","push","dist","onMarkerClickTrue","marker","selectedPlace","activeMarker","showingInfoWindow","showChatButton","onMarkerClickFalse","onClose","showButtonInfoWindow","gmaps_CurrentLocation","GoogleApiWrapper","apiKey","ChatContainer","sendOpenPrivateMessage","activeChat","addUserToChat","chatId","newUser","newChats","toConsumableArray","removeUsersFromChat","removedUsers","newUsers","difference","resetChat","addChat","reset","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","includes","showMap","showMapUserClick","initSocket","off","values","_this3","_this$props2","SideBar_SideBar","Messages_Messages","MessageInput_MessageInput","Gmaps","socketUrl","Layout","io","reconnect","console","log","ChatContainer_ChatContainer","LoginForm_LoginForm","App","Layout_Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.a2d6973e.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n\tLOGOUT:\"LOGOUT\",\r\n\tPRIVATE_MESSAGE:\"PRIVATE_MESSAGE\",\r\n\tNEW_CHAT_USER: \"NEW_CHAT_USER\"\r\n}","const uuidv4 = require('uuid/v4')\r\n\r\n/*\r\n*\tcreateUser\r\n*\tCreates a user.\r\n*\t@prop id {string}\r\n*\t@prop name {string}\r\n*\t@param {object} \r\n*\t\tname {string}\r\n*/\r\nconst createUser = ({ name = \"\", socketId = null, coordinates = {} } = {}) => (\r\n\t{\r\n\t\tid: uuidv4(),\r\n\t\tname,\r\n\t\tsocketId,\r\n\t\tcoordinates\r\n\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateMessage\r\n*\tCreates a messages object.\r\n* \t@prop id {string}\r\n* \t@prop time {Date} the time in 24hr format i.e. 14:22\r\n* \t@prop message {string} actual string message\r\n* \t@prop sender {string} sender of the message\r\n*\t@param {object} \r\n*\t\tmessage {string}\r\n*\t\tsender {string}\r\n*/\r\nconst createMessage = ({ message = \"\", sender = \"\" } = {}) => (\r\n\t{\r\n\t\tid: uuidv4(),\r\n\t\ttime: getTime(new Date(Date.now())),\r\n\t\tmessage,\r\n\t\tsender\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateChat\r\n*\tCreates a Chat object\r\n* \t@prop id {string}\r\n* \t@prop name {string}\r\n* \t@prop messages {Array.Message}\r\n* \t@prop users {Array.string}\r\n*\t@param {object} \r\n*\t\tmessages {Array.Message}\r\n*\t\tname {string}\r\n*\t\tusers {Array.string} \r\n*/\r\nconst createChat = ({ messages = [], name = \"Community\", users = [], isCommunity = false } = {}) => (\r\n\t{\r\n\t\tid: uuidv4(),\r\n\t\tname: isCommunity ? \"Community\" : createChatNameFromUsers(users),\r\n\t\tmessages,\r\n\t\tusers,\r\n\t\ttypingUsers: [],\r\n\t\tisCommunity\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateChatNameFromUsers\r\n*\t@param users {Array.string}\r\n*\t@param excludedUser {string} user to exclude from list of names\r\n*\t@return {string} users names concatenated by a '&' or 'Empty Chat' if no users\r\n*/\r\n\r\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\r\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Users\"\r\n}\r\n\r\n\r\n/*\r\n*\t@param date {Date}\r\n*\t@return a string represented in 24hr time i.e. '11:30', '19:30'\r\n*/\r\nconst getTime = (date) => {\r\n\treturn `${date.getHours()}:${(\"0\" + date.getMinutes()).slice(-2)}`\r\n}\r\n\r\nmodule.exports = {\r\n\tcreateMessage,\r\n\tcreateChat,\r\n\tcreateUser,\r\n\tcreateChatNameFromUsers\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events'\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tnickname: \"\",\r\n\t\t\terror: \"\",\r\n\t\t\tcurrentPos: {}\r\n\t\t};\r\n\t}\r\n\r\n\tsetUser = ({ user, isUser }) => {\r\n\t\tif (isUser) {\r\n\t\t\tthis.setError(\"Username already taken\")\r\n\t\t} else if (this.state.nickname === \"\") {\r\n\t\t\tthis.setError(\"Got a name?\")\r\n\t\t} else {\r\n\t\t\tthis.setError(\"\")\r\n\t\t\tthis.props.setUser(user)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\r\n\t\tconst { socket } = this.props\r\n\t\tconst { nickname } = this.state\r\n\t\tconst { currentPos } = this.state\r\n\r\n\r\n\r\n\t\tsocket.emit(VERIFY_USER, nickname, currentPos, this.setUser)\r\n\t}\r\n\r\n\thandleChange = (e) => {\r\n\t\tthis.setState({ nickname: e.target.value })\r\n\t}\r\n\r\n\tsetError = (error) => {\r\n\t\tthis.setState({ error })\r\n\t}\r\n\r\n\tsetUserCoordinates = () => {\r\n\t\tif (navigator && navigator.geolocation) {\r\n\t\t\tnavigator.geolocation.getCurrentPosition(pos => {\r\n\t\t\t\tconst coords = pos.coords;\r\n\t\t\t\tthis.setState({\r\n\t\t\t\t\tcurrentPos: {\r\n\t\t\t\t\t\tlat: coords.latitude,\r\n\t\t\t\t\t\tlng: coords.longitude\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { nickname, error } = this.state;\r\n\t\tthis.setUserCoordinates()\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Hi! what's your name?</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input) => { this.textInput = input }}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'name goes here'}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<div className=\"error\">{error ? error : null}</div>\r\n\r\n\t\t\t\t\t<div className=\"centerit\">\r\n\t\t\t\t\t\t<button className=\"button\">enter</button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport class SideBarOption extends Component {\r\n    static propTypes = {\r\n        name: PropTypes.string.isRequired,\r\n        lastMessage: PropTypes.string,\r\n        active: PropTypes.bool,\r\n        onClick: PropTypes.func\r\n    }\r\n\r\n    static defaultProps = {\r\n        lastMessage: \"\",\r\n        active: false,\r\n\r\n        onClick: () => { }\r\n    }\r\n\r\n    render() {\r\n        const { name, lastMessage, active, onClick } = this.props\r\n        if (name !== \"Empty Users\") {\r\n            return (\r\n                <div\r\n                    className={`user ${active ? 'active' : ''}`}\r\n                    onClick={onClick}\r\n                >\r\n                    <div className=\"user-photo\">{name[0].toUpperCase()}</div>\r\n                    <div className=\"user-info\">\r\n                        <div className=\"name\">{name}</div>\r\n                        {lastMessage && <div className=\"last-message\">{lastMessage}</div>}\r\n                    </div>\r\n                </div>\r\n            );\r\n\r\n        } else {\r\n            return (<></>);\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\nimport { SideBarOption } from './SideBarOption'\r\nimport { get, last, differenceBy } from 'lodash'\r\nimport { createChatNameFromUsers } from '../../Factories'\r\n\r\n\r\nexport default class SideBar extends Component {\r\n\tstatic type = {\r\n\t\tCHATS: \"chats\",\r\n\t\tUSERS: \"users\"\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\treciever: \"\",\r\n\t\t\tactiveSideBar: SideBar.type.CHATS,\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { reciever } = this.state\r\n\t\tconst { onSendPrivateMessage } = this.props\r\n\r\n\t\tonSendPrivateMessage(reciever)\r\n\t\tthis.setState({ reciever: \"\" })\r\n\r\n\t}\r\n\taddChatForUser = (username) => {\r\n\t\tthis.props.onSendPrivateMessage(username)\r\n\t\tthis.setActiveSideBar(SideBar.type.CHATS)\r\n\t\t\r\n\t}\r\n\tsetActiveSideBar = (newSideBar) => {\r\n\t\tthis.setState({ activeSideBar: newSideBar })\r\n\t\tthis.props.triggerShowMap()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { chats, user, setActiveChat, logout, users } = this.props\r\n\t\tconst { reciever, activeSideBar } = this.state\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\" className=\"noscroll\">\r\n\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t<div className=\"app-name\">chatMe</div>\r\n\t\t\t\t\t<div className=\"menu\"></div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"search\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={reciever}\r\n\t\t\t\t\t\tonChange={(e) => { this.setState({ reciever: e.target.value }) }} />\r\n\t\t\t\t\t<input type=\"submit\" className=\"plus\" value=\"+\" ></input>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"side-bar-select\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => { this.setActiveSideBar(SideBar.type.CHATS) }}\r\n\t\t\t\t\t\tclassName={`side-bar-select__option ${(activeSideBar === SideBar.type.CHATS) ? 'active' : ''}`}>\r\n\t\t\t\t\t\t<span>Chats</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={() => { this.setActiveSideBar(SideBar.type.USERS) }}\r\n\t\t\t\t\t\tclassName={`side-bar-select__option ${(activeSideBar === SideBar.type.USERS) ? 'active' : ''}`}>\r\n\t\t\t\t\t\t<span >Users</span>\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"users\"\r\n\t\t\t\t\tref='users'\r\n\t\t\t\t\tonClick={(e) => { (e.target === this.refs.user) && setActiveChat(null) }}>\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveSideBar === SideBar.type.CHATS ?\r\n\t\t\t\t\t\t\tchats.map((chat) => {\r\n\t\t\t\t\t\t\t\tif (chat.name) {\r\n\t\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t\t<SideBarOption\r\n\t\t\t\t\t\t\t\t\t\t\tkey={chat.id}\r\n\t\t\t\t\t\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\t\t\t\t\t\tname={chat.isCommunity ? chat.name : createChatNameFromUsers(chat.users, user.name)}\r\n\t\t\t\t\t\t\t\t\t\t\tlastMessage={get(last(chat.messages), 'message', '')}\r\n\t\t\t\t\t\t\t\t\t\t\t//active={activeChat.id === chat.id} /// \"for future development\"\r\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => { this.props.setActiveChat(chat) }}\r\n\t\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t\t:\r\n\t\t\t\t\t\t\tdifferenceBy(users, [user], 'name').map((otherUser) => {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<SideBarOption\r\n\t\t\t\t\t\t\t\t\t\tkey={otherUser.id}\r\n\t\t\t\t\t\t\t\t\t\tname={otherUser.name}\r\n\t\t\t\t\t\t\t\t\t\tonClick={() => { this.addChatForUser(otherUser.name) }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t<div onClick={() => { logout() }} title=\"Logout\" className=\"logout\">\r\n\t\t\t\t\t\t<p>log out</p>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default function({name, numberOfUsers}) {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\"></div>\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown() {\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tmessage: \"\",\r\n\t\t\tisTyping: false\r\n\t\t};\r\n\r\n\t}\r\n\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({ message: \"\" })\r\n\t}\r\n\r\n\tsendMessage = () => {\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = () => {\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif (!this.state.isTyping) {\r\n\t\t\tthis.setState({ isTyping: true })\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = () => {\r\n\t\tthis.typingInterval = setInterval(() => {\r\n\t\t\tif ((Date.now() - this.lastUpdateTime) > 300) {\r\n\t\t\t\tthis.setState({ isTyping: false })\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = () => {\r\n\t\tif (this.typingInterval) {\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form\r\n\t\t\t\t\tonSubmit={this.handleSubmit}\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tid=\"message\"\r\n\t\t\t\t\t\tref={\"messageinput\"}\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tvalue={message}\r\n\t\t\t\t\t\tautoComplete={'off'}\r\n\t\t\t\t\t\tplaceholder=\"Type here\"\r\n\t\t\t\t\t\tonKeyUp={e => { e.keyCode !== 13 && this.sendTyping() }}\r\n\t\t\t\t\t\tonChange={\r\n\t\t\t\t\t\t\t({ target }) => {\r\n\t\t\t\t\t\t\t\tthis.setState({ message: target.value })\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled={message.length < 1}\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tclassName=\"send\"\r\n\t\t\t\t\t> Send\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nconst mapStyles = {\r\n  map: {\r\n    position: 'absolute',\r\n    width: '69.3%',\r\n    height: '100%'\r\n  }\r\n}\r\n\r\nexport class CurrentLocation extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      currentLocation:\r\n        this.props.currentLocation\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    if (this.props.centerAroundCurrentLocation) {\r\n      this.setState({\r\n        currentLocation: this.props.user.coordinates\r\n      });\r\n    }\r\n    this.loadMap();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    if (prevProps.google !== this.props.google) {\r\n      this.loadMap();\r\n    }\r\n    if (prevState.currentLocation !== this.state.currentLocation) {\r\n      this.recenterMap();\r\n    }\r\n  }\r\n\r\n  loadMap() {\r\n    if (this.props && this.props.google) {\r\n      // checks if google is available\r\n      const { google } = this.props;\r\n      const maps = google.maps;\r\n      const mapRef = this.refs.map;\r\n\r\n      // reference to the actual DOM element\r\n      const node = ReactDOM.findDOMNode(mapRef);\r\n\r\n      let { zoom } = this.props;\r\n      const { lat, lng } = this.state.currentLocation;\r\n      const center = new maps.LatLng(lat, lng);\r\n      const mapConfig = Object.assign(\r\n        {},\r\n        {\r\n          center: center,\r\n          zoom: zoom\r\n        }\r\n      );\r\n      // maps.Map() is a constructor that instantiates the map\r\n      this.map = new maps.Map(node, mapConfig);\r\n    }\r\n  }\r\n\r\n  recenterMap() {\r\n    const map = this.map;\r\n    const current = this.state.currentLocation;\r\n\r\n    const google = this.props.google;\r\n    const maps = google.maps;\r\n\r\n    if (map) {\r\n      let center = new maps.LatLng(current.lat, current.lng);\r\n      map.panTo(center);\r\n    }\r\n  }\r\n\r\n  renderChildren() {\r\n    const { children } = this.props;\r\n\r\n    if (!children) return;\r\n\r\n    return React.Children.map(children, c => {\r\n      if (!c) return;\r\n      return React.cloneElement(c, {\r\n        map: this.map,\r\n        google: this.props.google,\r\n        mapCenter: this.state.currentLocation\r\n      });\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const style = Object.assign({}, mapStyles.map);\r\n\r\n    return (\r\n      <div>\r\n        <div style={style} ref=\"map\">\r\n          Loading map...\r\n        </div>\r\n        {this.renderChildren()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default CurrentLocation;\r\n\r\nCurrentLocation.defaultProps = {\r\n  zoom: 14,\r\n  initialCenter: {\r\n    lat: -1.2884,\r\n    lng: 36.8233\r\n  },\r\n  centerAroundCurrentLocation: false,\r\n  visible: true\r\n};\r\n","import React, { Component } from 'react';\r\nimport { GoogleApiWrapper, InfoWindow, Marker } from 'google-maps-react';\r\nimport CurrentLocation from './CurrentLocation';\r\n\r\nexport class MapContainer extends Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      showingInfoWindow: false,\r\n      showChatButton: true,\r\n      activeMarker: {},\r\n      selectedPlace: {},\r\n      currentLocation: this.props.user.coordinates\r\n\r\n    };\r\n  }\r\n\r\n  createMarkers = () => {\r\n    const { users } = this.props;\r\n    const { user } = this.props;\r\n    let table = [];\r\n\r\n    for (var i = 0; i < users.length; i++) {\r\n      if (users[i].name !== user.name) {\r\n        table.push(\r\n          <Marker onClick={this.onMarkerClickTrue} name={\"Here's you friend \" + users[i].name} position={users[i].coordinates} key={i} />\r\n\r\n        );\r\n      }\r\n    }\r\n    return table\r\n  }\r\n\r\n  onMarkerClickTrue = (props, marker, e) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n      showChatButton: true\r\n    });\r\n  }\r\n\r\n  onMarkerClickFalse = (props, marker, e) => {\r\n    this.setState({\r\n      selectedPlace: props,\r\n      activeMarker: marker,\r\n      showingInfoWindow: true,\r\n      showChatButton: false\r\n    });\r\n  }\r\n\r\n  onClose = props => {\r\n    if (this.state.showingInfoWindow) {\r\n      this.setState({\r\n        showingInfoWindow: false,\r\n        activeMarker: null\r\n      });\r\n    }\r\n  };\r\n\r\n\r\n  showButtonInfoWindow = () => {\r\n    let table = [];\r\n    if (this.state.showChatButton === true) {\r\n      table.push(<button key={1}>Start chat (function unavailable)</button>);\r\n    }\r\n    return table\r\n  }\r\n\r\n  render() {\r\n    const { user, users } = this.props;\r\n\r\n    return (\r\n      <CurrentLocation centerAroundCurrentLocation google={this.props.google} user={user} users={users} currentLocation={this.state.currentLocation}>\r\n        <Marker onClick={this.onMarkerClickFalse} name={\"You are here \" + user.name} />\r\n        {/* generates markers for other users */}\r\n        {this.createMarkers()}\r\n\r\n        <InfoWindow\r\n          marker={this.state.activeMarker}\r\n          visible={this.state.showingInfoWindow}\r\n          onClose={this.onClose}\r\n        >\r\n          <div className=\"infoboxLocation\">\r\n            <h4>{this.state.selectedPlace.name}</h4>\r\n            {/* onClick={this.addChatForUser(otherUser.name)} */}\r\n            {this.showButtonInfoWindow()}\r\n          </div>\r\n        </InfoWindow>\r\n      </CurrentLocation>\r\n    );\r\n  }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n  apiKey: 'AIzaSyAvuy-sA7Rllb8GKEsLNpcw5OAd4ff8ecc'\r\n})(MapContainer);\r\n","import React, { Component } from 'react';\r\nimport SideBar from '../sidebar/SideBar'\r\nimport {\r\n\tCOMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED,\r\n\tTYPING, PRIVATE_MESSAGE, USER_CONNECTED, USER_DISCONNECTED,\r\n\tNEW_CHAT_USER\r\n} from '../../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../messages/Messages'\r\nimport MessageInput from '../messages/MessageInput'\r\nimport MapContainer from '../gmaps/Gmaps'\r\nimport { values, difference, differenceBy } from 'lodash'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tchats: [],\r\n\t\t\tusers: [],\r\n\t\t\tactiveChat: null,\r\n\t\t\tshowMap: false\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tthis.initSocket(socket)\r\n\t}\r\n\tcomponentWillUnmount() {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.off(PRIVATE_MESSAGE)\r\n\t\tsocket.off(USER_CONNECTED)\r\n\t\tsocket.off(USER_DISCONNECTED)\r\n\t\tsocket.off(NEW_CHAT_USER)\r\n\t}\r\n\tinitSocket(socket) {\r\n\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\tsocket.on(PRIVATE_MESSAGE, this.addChat)\r\n\t\tsocket.on('connect', () => {\r\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\t})\r\n\t\tsocket.on(USER_CONNECTED, (users) => {\r\n\t\t\tthis.setState({ users: values(users) })\r\n\r\n\t\t})\r\n\t\tsocket.on(USER_DISCONNECTED, (users) => {\r\n\t\t\tconst removedUsers = differenceBy(this.state.users, values(users), 'id')\r\n\t\t\tthis.removeUsersFromChat(removedUsers)\r\n\t\t\tthis.setState({ users: values(users) })\r\n\t\t})\r\n\t\tsocket.on(NEW_CHAT_USER, this.addUserToChat)\r\n\t}\r\n\r\n\tsendOpenPrivateMessage = (reciever) => {\r\n\t\tconst { socket, user } = this.props\r\n\t\tconst { activeChat } = this.state\r\n\t\tsocket.emit(PRIVATE_MESSAGE, { reciever, sender: user.name, activeChat })\r\n\t}\r\n\taddUserToChat = ({ chatId, newUser }) => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map(chat => {\r\n\t\t\tif (chat.id === chatId) {\r\n\t\t\t\treturn Object.assign({}, chat, { users: [...chat.users, newUser] })\r\n\t\t\t}\r\n\t\t\treturn chat\r\n\t\t})\r\n\t\tthis.setState({ chats: newChats })\r\n\t}\r\n\tremoveUsersFromChat = removedUsers => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map(chat => {\r\n\t\t\tlet newUsers = difference(chat.users, removedUsers.map(u => u.name))\r\n\t\t\treturn Object.assign({}, chat, { users: newUsers })\r\n\t\t})\r\n\t\tthis.setState({ chats: newChats })\r\n\t}\r\n\t/*\r\n\t*\tReset the chat back to only the chat passed in.\r\n\t* \t@param chat {Chat}\r\n\t*/\r\n\tresetChat = (chat) => {\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds chat to the chat container, if reset is true removes all chats\r\n\t*\tand sets that chat to the main chat.\r\n\t*\tSets the message and typing socket events for the chat.\r\n\t*\t\r\n\t*\t@param chat {Chat} the chat to be added.\r\n\t*\t@param reset {boolean} if true will set the chat as the only chat.\r\n\t*/\r\n\taddChat = (chat, reset = false) => {\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({ chats: newChats })\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\t/*\r\n\t* \tReturns a function that will \r\n\t*\tadds message to chat with the chatId passed in. \r\n\t*\r\n\t* \t@param chatId {number}\r\n\t*/\r\n\taddMessageToChat = (chatId) => {\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat) => {\r\n\t\t\t\tif (chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({ chats: newChats })\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = (chatId) => {\r\n\t\treturn ({ isTyping, user }) => {\r\n\t\t\tif (user !== this.props.user.name) {\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat) => {\r\n\t\t\t\t\tif (chat.id === chatId) {\r\n\t\t\t\t\t\tif (isTyping && !chat.typingUsers.includes(user)) {\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t} else if (!isTyping && chat.typingUsers.includes(user)) {\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({ chats: newChats })\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds a message to the specified chat\r\n\t*\t@param chatId {number}  The id of the chat to be added to.\r\n\t*\t@param message {string} The message to be added to the chat.\r\n\t*/\r\n\tsendMessage = (chatId, message) => {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, { chatId, message })\r\n\t}\r\n\r\n\t/*\r\n\t*\tSends typing status to server.\r\n\t*\tchatId {number} the id of the chat being typed in.\r\n\t*\ttyping {boolean} If the user is typing still or not.\r\n\t*/\r\n\tsendTyping = (chatId, isTyping) => {\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, { chatId, isTyping })\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat) => {\r\n\t\tthis.setState({ activeChat })\r\n\t\tthis.setState({ showMap: false})\r\n\r\n\t}\r\n\r\n\tshowMapUserClick = () => {\r\n\t\tthis.setState({showMap: true}\r\n\t\t\t)\r\n\t}\r\n\r\n\trender() {\r\n\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat, users, showMap } = this.state\r\n\t\t\r\n\t\tif (activeChat !== null && showMap === false) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t\ttriggerShowMap={this.showMapUserClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t<ChatHeading \r\n\t\t\t\t\t\t\tname={activeChat.name} \r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Messages\r\n\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<MessageInput\r\n\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t(message) => {\r\n\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t(isTyping) => {\r\n\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse if (showMap === true) {\r\n\t\t\treturn (\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t\ttriggerShowMap={this.showMapUserClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t<div className=\"chat-room choose\">\t\t\t\r\n\t\t\t\t\t\t<MapContainer\r\n\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\t/>    \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t);\r\n\t\t}\r\n\t\telse {\r\n\t\t\treturn (\t\t\r\n\t\t\t\t<div className=\"container\">\r\n\t\t\t\t\t<SideBar\r\n\t\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\t\tchats={chats}\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t\ttriggerShowMap={this.showMapUserClick}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t<div className=\"chat-room choose\">\t\t\t\r\n\t\t\t\t\t\t<MapContainer\r\n\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\tusers={users}\r\n\t\t\t\t\t\t/>    \r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\r\n\t\t\t);\r\n\t\t}\r\n\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chats/ChatContainer'\r\n\r\n\r\nconst socketUrl = \"/\"\r\nexport default class Layout extends Component {\r\n\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\r\n\t\tthis.state = {\r\n\t\t\tsocket: null,\r\n\t\t\tuser: null\r\n\t\t};\r\n\t}\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.initSocket()\r\n\t}\r\n\r\n\t/*\r\n\t*\tConnect to and initializes the socket.\r\n\t*/\r\n\tinitSocket = () => {\r\n\t\tconst socket = io(socketUrl)\r\n\r\n\t\tsocket.on('connect', () => {\r\n\t\t\tif (this.state.user) {\r\n\t\t\t\tthis.reconnect(socket)\r\n\t\t\t} else {\r\n\t\t\t\tconsole.log(\"Connected\");\r\n\t\t\t}\r\n\t\t})\r\n\r\n\t\tthis.setState({ socket })\r\n\t}\r\n\r\n\treconnect = (socket) => {\r\n\t\tsocket.emit(VERIFY_USER, this.state.user.name, this.state.user.coordinates, ({ isUser, user }) => {\r\n\t\t\tif (isUser) {\r\n\t\t\t\tthis.setState({ user: null })\r\n\t\t\t} else {\r\n\t\t\t\tthis.setUser(user)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\t* \tSets the user property in state \r\n\t*\t@param user {id:number, name:string}\r\n\t*/\r\n\tsetUser = (user) => {\r\n\t\tconst { socket } = this.state;\r\n\t\tsocket.emit(USER_CONNECTED, user);\r\n\t\tthis.setState({ user })\r\n\t}\r\n\r\n\t/*\r\n\t*\tSets the user property in state to null.\r\n\t*/\r\n\tlogout = () => {\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(LOGOUT)\r\n\t\tthis.setState({ user: null })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { socket, user } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{\r\n\t\t\t\t\t!user ?\r\n\t\t\t\t\t\t<LoginForm\r\n\t\t\t\t\t\t\tsocket={socket}\r\n\t\t\t\t\t\t\tsetUser={this.setUser} />\r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\t<ChatContainer\r\n\t\t\t\t\t\t\tsocket={socket}\r\n\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\tlogout={this.logout}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout'\r\n// import 'bootstrap/dist/css/bootstrap.css';\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}