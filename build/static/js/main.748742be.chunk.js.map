{"version":3,"sources":["Events.js","Factories.js","components/LoginForm.js","components/sidebar/SideBarOption.js","components/sidebar/SideBar.js","components/chats/ChatHeading.js","components/messages/Messages.js","components/messages/MessageInput.js","components/chats/ChatContainer.js","components/Layout.js","App.js","registerServiceWorker.js","index.js"],"names":["module","exports","COMMUNITY_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","PRIVATE_MESSAGE","NEW_CHAT_USER","uuidv4","require","createChatNameFromUsers","users","excludedUser","arguments","length","undefined","filter","u","join","getTime","date","concat","getHours","getMinutes","slice","createMessage","_ref2","_ref2$message","message","_ref2$sender","sender","id","time","Date","now","createChat","_ref3","_ref3$messages","messages","_ref3$users","name","_ref3$isCommunity","isCommunity","typingUsers","createUser","_ref","_ref$name","_ref$socketId","socketId","LoginForm","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","setUser","user","isUser","setError","handleSubmit","e","preventDefault","socket","nickname","state","emit","handleChange","setState","target","value","error","_this2","_this$state","react_default","a","createElement","className","onSubmit","htmlFor","ref","input","textInput","type","onChange","placeholder","Component","SideBarOption","_Component","apply","inherits","createClass","key","_this$props","lastMessage","active","onClick","toUpperCase","defaultProps","SideBar","reciever","onSendPrivateMessage","addChatForUser","username","setActiveSideBar","CHATS","newSideBar","activeSideBar","chats","activeChat","setActiveChat","logout","USERS","refs","map","chat","console","log","SideBarOption_SideBarOption","get","last","differenceBy","otherUser","title","ChatHeading","numberOfUsers","Messages","scrollDown","bind","assertThisInitialized","container","scrollTop","scrollHeight","prevProps","prevState","mes","MessageInput","sendMessage","sendTyping","lastUpdateTime","isTyping","startCheckingTyping","typingInterval","setInterval","stopCheckingTyping","clearInterval","autoComplete","onKeyUp","keyCode","disabled","ChatContainer","sendOpenPrivateMessage","addUserToChat","chatId","newUser","newChats","assign","toConsumableArray","removeUsersFromChat","removedUsers","newUsers","difference","resetChat","addChat","reset","messageEvent","typingEvent","on","updateTypingInChat","addMessageToChat","push","includes","initSocket","off","values","_this3","_this$props2","SideBar_SideBar","Messages_Messages","MessageInput_MessageInput","socketUrl","Layout","io","reconnect","ChatContainer_ChatContainer","LoginForm_LoginForm","App","Layout_Layout","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","src_App","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.748742be.chunk.js","sourcesContent":["module.exports = {\r\n\tCOMMUNITY_CHAT:\"COMMUNITY_CHAT\",\r\n\tUSER_CONNECTED:\"USER_CONNECTED\",\r\n\tMESSAGE_RECIEVED:\"MESSAGE_RECIEVED\",\r\n\tMESSAGE_SENT:\"MESSAGE_SENT\",\r\n\tUSER_DISCONNECTED:\"USER_DISCONNECTED\",\r\n\tTYPING:\"TYPING\",\r\n\tVERIFY_USER:\"VERIFY_USER\",\r\n\tLOGOUT:\"LOGOUT\",\r\n\tPRIVATE_MESSAGE:\"PRIVATE_MESSAGE\",\r\n\tNEW_CHAT_USER: \"NEW_CHAT_USER\"\r\n}","const uuidv4 = require('uuid/v4')\r\n\r\n/*\r\n*\tcreateUser\r\n*\tCreates a user.\r\n*\t@prop id {string}\r\n*\t@prop name {string}\r\n*\t@param {object} \r\n*\t\tname {string}\r\n*/\r\nconst createUser = ({name = \"\", socketId = null } = {})=>(\r\n\t{\r\n\t\tid:uuidv4(),\r\n\t\tname,\r\n\t\tsocketId\r\n\t\t\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateMessage\r\n*\tCreates a messages object.\r\n* \t@prop id {string}\r\n* \t@prop time {Date} the time in 24hr format i.e. 14:22\r\n* \t@prop message {string} actual string message\r\n* \t@prop sender {string} sender of the message\r\n*\t@param {object} \r\n*\t\tmessage {string}\r\n*\t\tsender {string}\r\n*/\r\nconst createMessage = ({message = \"\", sender = \"\"} = { })=>(\r\n\t\t{\r\n\t\t\tid:uuidv4(),\r\n\t\t\ttime:getTime(new Date(Date.now())),\r\n\t\t\tmessage,\r\n\t\t\tsender\t\r\n\t\t}\r\n\r\n\t)\r\n\r\n/*\r\n*\tcreateChat\r\n*\tCreates a Chat object\r\n* \t@prop id {string}\r\n* \t@prop name {string}\r\n* \t@prop messages {Array.Message}\r\n* \t@prop users {Array.string}\r\n*\t@param {object} \r\n*\t\tmessages {Array.Message}\r\n*\t\tname {string}\r\n*\t\tusers {Array.string}\r\n* \r\n*/\r\nconst createChat = ({messages = [], name = \"Community\", users = [], isCommunity = false } = {})=>(\r\n\t{\r\n\t\tid:uuidv4(),\r\n\t\t\r\n\t\tname: isCommunity ? \"Community\" : createChatNameFromUsers(users),\r\n\t\tmessages,\r\n\t\tusers,\r\n\t\ttypingUsers:[],\r\n\t\tisCommunity\r\n\t}\r\n)\r\n\r\n/*\r\n*\tcreateChatNameFromUsers\r\n*\t@param users {Array.string}\r\n*\t@param excludedUser {string} user to exclude from list of names\r\n*\t@return {string} users names concatenated by a '&' or 'Empty Chat' if no users\r\n*/\r\n\r\nconst createChatNameFromUsers = (users, excludedUser = \"\") => {\r\n\treturn users.filter(u => u !== excludedUser).join(' & ') || \"Empty Users\"\r\n}\r\n\r\n\r\n/*\r\n*\t@param date {Date}\r\n*\t@return a string represented in 24hr time i.e. '11:30', '19:30'\r\n*/\r\nconst getTime = (date)=>{\r\n\treturn `${date.getHours()}:${(\"0\"+date.getMinutes()).slice(-2)}`\r\n}\r\n\r\nmodule.exports = {\r\n\tcreateMessage,\r\n\tcreateChat,\r\n\tcreateUser,\r\n\tcreateChatNameFromUsers\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport { VERIFY_USER } from '../Events'\r\n\r\nexport default class LoginForm extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tnickname:\"\",\r\n\t  \terror:\"\"\r\n\t  };\r\n\t}\r\n\r\n\tsetUser = ({user, isUser})=>{\r\n\r\n\t\tif(isUser){\r\n\t\t\tthis.setError(\"Username already taken\")\r\n\t\t}else{\r\n\t\t\tthis.setError(\"\")\r\n\t\t\tthis.props.setUser(user)\r\n\t\t}\r\n\t}\r\n\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tconst { socket } = this.props\r\n\t\tconst { nickname } = this.state\r\n\t\tsocket.emit(VERIFY_USER, nickname, this.setUser)\r\n\t}\r\n\r\n\thandleChange = (e)=>{\r\n\t\tthis.setState({nickname:e.target.value})\r\n\t}\r\n\r\n\tsetError = (error)=>{\r\n\t\tthis.setState({error})\r\n\t}\r\n\r\n\trender() {\t\r\n\t\tconst { nickname, error } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"login\">\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"login-form\" >\r\n\r\n\t\t\t\t\t<label htmlFor=\"nickname\">\r\n\t\t\t\t\t\t<h2>Hi! what's your name?</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={(input)=>{ this.textInput = input }} \r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tid=\"nickname\"\r\n\t\t\t\t\t\tvalue={nickname}\r\n\t\t\t\t\t\tonChange={this.handleChange}\r\n\t\t\t\t\t\tplaceholder={'name goes here... '}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<div className=\"error\">{error ? error:null}</div>\r\n\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","\r\nimport React, { Component } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nexport class SideBarOption extends Component {\r\n  static propTypes = {\r\n      name: PropTypes.string.isRequired,\r\n      lastMessage: PropTypes.string,\r\n      active: PropTypes.bool,\r\n      onClick: PropTypes.func\r\n  }\r\n  static defaultProps = {\r\n      lastMessage: \"\",\r\n      active: false,\r\n      onClick: () => {}\r\n  }\r\n    render() {\r\n        const { name, lastMessage, active, onClick } = this.props\r\n        return (\r\n            <div\r\n                className={`user ${active ? 'active': ''}`}\r\n                onClick={ onClick }\r\n            >\r\n                <div className=\"user-photo\">{name[0].toUpperCase()}</div>\r\n                <div className=\"user-info\">\r\n                    <div className=\"name\">{name}</div>\r\n                    {lastMessage && <div className=\"last-message\">{lastMessage}</div>}\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\r\n// import FaSearch from 'react-icons/lib/fa/search'\r\n// import MdEject from 'react-icons/lib/md/eject'\r\nimport { SideBarOption } from './SideBarOption'\r\nimport { get, last, differenceBy } from 'lodash'\r\nimport { createChatNameFromUsers } from '../../Factories'\r\n\r\n\r\nexport default class SideBar extends Component {\r\n\tstatic type = {\r\n\t\tCHATS:\"chats\",\r\n\t\tUSERS:\"users\"\r\n\t}\r\n\tconstructor(props) {\r\n\t\tsuper(props)\r\n\t\tthis.state = {\r\n\t\t\treciever: \"\",\r\n\t\t\tactiveSideBar: SideBar.type.CHATS\r\n\t\t}\r\n\t}\r\n\thandleSubmit = (e) => {\r\n\t\te.preventDefault()\r\n\t\tconst { reciever } = this.state\r\n\t\tconst { onSendPrivateMessage } = this.props\r\n\r\n\t\tonSendPrivateMessage(reciever)\r\n\t\tthis.setState({ reciever: \"\" })\r\n\t}\r\n\taddChatForUser = (username) => {\r\n\t\tthis.props.onSendPrivateMessage(username)\r\n\t\tthis.setActiveSideBar(SideBar.type.CHATS)\r\n\t}\r\n\tsetActiveSideBar = ( newSideBar ) => {\r\n\t\tthis.setState({ activeSideBar:newSideBar })\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { chats, activeChat, user, setActiveChat, logout, users } = this.props\r\n\t\tconst { reciever, activeSideBar } = this.state\r\n\t\treturn (\r\n\t\t\t<div id=\"side-bar\">\r\n\t\t\t\t<div className=\"heading\">\r\n\t\t\t\t\t<div className=\"app-name\">chatMe</div>\r\n\t\t\t\t\t<div className=\"menu\">\r\n\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<form onSubmit={this.handleSubmit} className=\"search\">\r\n\t\t\t\t\t<i className=\"search-icon\"></i>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tplaceholder=\"Search\"\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tvalue={reciever}\r\n\t\t\t\t\t\tonChange={(e) => { this.setState({ reciever: e.target.value }) }} />\r\n\t\t\t\t\t<div className=\"plus\"></div>\r\n\t\t\t\t</form>\r\n\t\t\t\t<div className=\"side-bar-select\">\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={ ()=>{ this.setActiveSideBar(SideBar.type.CHATS) }}\r\n\t\t\t\t\t\tclassName={`side-bar-select__option ${(activeSideBar === SideBar.type.CHATS) ? 'active':'' }`}>\r\n\t\t\t\t\t\t<span>Chats</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<div\r\n\t\t\t\t\t\tonClick={ ()=>{ this.setActiveSideBar(SideBar.type.USERS) }}\r\n\t\t\t\t\t\tclassName={`side-bar-select__option ${(activeSideBar === SideBar.type.USERS)  ? 'active':'' }`}>\r\n\t\t\t\t\t\t<span>Users</span>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div\r\n\t\t\t\t\tclassName=\"users\"\r\n\t\t\t\t\tref='users'\r\n\t\t\t\t\tonClick={(e) => { (e.target === this.refs.user) && setActiveChat(null) }}>\r\n\r\n\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveSideBar === SideBar.type.CHATS ?\r\n\t\t\t\t\t\tchats.map((chat) => {\r\n\t\t\t\t\t\t\tif (chat.name) {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\tconsole.log(users + user.name),\r\n\t\t\t\t\t\t\t\t\t<SideBarOption\r\n\t\t\t\t\t\t\t\t\t\tkey={chat.id}\r\n\t\t\t\t\t\t\t\t\t\tname={chat.isCommunity ? chat.name : createChatNameFromUsers(chat.users, user.name)}\r\n\t\t\t\t\t\t\t\t\t\tlastMessage={get(last(chat.messages), 'message', '')}\r\n\t\t\t\t\t\t\t\t\t\tactive={activeChat.id === chat.id}\r\n\t\t\t\t\t\t\t\t\t\tonClick={ () => { this.props.setActiveChat(chat) }}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\treturn null\r\n\t\t\t\t\t\t}) \r\n\t\t\t\t\t\t:\r\n\t\t\t\t\t\tdifferenceBy(users, [user], 'name').map((otherUser) => {\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SideBarOption\r\n\t\t\t\t\t\t\t\t\tkey={otherUser.id}\r\n\t\t\t\t\t\t\t\t\tname={otherUser.name}\r\n\t\t\t\t\t\t\t\t\tonClick={ ()=>{ this.addChatForUser(otherUser.name) }}\r\n\r\n\t\t\t\t\t\t\t\t/>\r\n\r\n\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"current-user\">\r\n\t\t\t\t\t<span>{user.name}</span>\r\n\t\t\t\t\t<div onClick={() => { logout() }} title=\"Logout\" className=\"logout\">\r\n\t\t\t\t\t\t<h6>log out</h6>\r\n\t\t\t\t\t\t{/* <MdEject/>\t */}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\r\n\t}\r\n}\r\n","import React from 'react';\r\n\r\nexport default function({name, numberOfUsers}) {\r\n\t\r\n\treturn (\r\n\t\t<div className=\"chat-header\">\r\n\t\t\t<div className=\"user-info\">\r\n\t\t\t\t<div className=\"user-name\">{name}</div>\r\n\t\t\t\t<div className=\"status\">\r\n\t\t\t\t\t<div className=\"indicator\"></div>\r\n\t\t\t\t\t<span>{numberOfUsers ? numberOfUsers : null}</span>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n\t\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class Messages extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\t\r\n\t\tthis.scrollDown = this.scrollDown.bind(this)\r\n\t}\r\n\r\n\tscrollDown(){\r\n\t\tconst { container } = this.refs\r\n\t\tcontainer.scrollTop = container.scrollHeight\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\r\n\tcomponentDidUpdate(prevProps, prevState) {\r\n\t\tthis.scrollDown()\r\n\t}\r\n\t\r\n\trender() {\r\n\t\tconst { messages, user, typingUsers } = this.props\r\n\t\treturn (\r\n\t\t\t<div ref='container'\r\n\t\t\t\tclassName=\"thread-container\">\r\n\t\t\t\t<div className=\"thread\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tmessages.map((mes)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\t\t\tkey={mes.id}\r\n\t\t\t\t\t\t\t\t\tclassName={`message-container ${mes.sender === user.name && 'right'}`}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<div className=\"time\">{mes.time}</div>\r\n\t\t\t\t\t\t\t\t\t<div className=\"data\">\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"message\">{mes.message}</div>\r\n\t\t\t\t\t\t\t\t\t\t<div className=\"name\">{mes.sender}</div>\r\n\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ttypingUsers.map((name)=>{\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<div key={name} className=\"typing-user\">\r\n\t\t\t\t\t\t\t\t\t{`${name} is typing . . .`}\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t)\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nexport default class MessageInput extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tmessage:\"\",\r\n\t  \tisTyping:false\r\n\t  };\r\n\r\n\t}\r\n\t\r\n\thandleSubmit = (e)=>{\r\n\t\te.preventDefault()\r\n\t\tthis.sendMessage()\r\n\t\tthis.setState({message:\"\"})\r\n\t}\r\n\r\n\tsendMessage = ()=>{\r\n\t\tthis.props.sendMessage(this.state.message)\r\n\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t  this.stopCheckingTyping()\r\n\t}\r\n\r\n\tsendTyping = ()=>{\r\n\t\tthis.lastUpdateTime = Date.now()\r\n\t\tif(!this.state.isTyping){\r\n\t\t\tthis.setState({isTyping:true})\r\n\t\t\tthis.props.sendTyping(true)\r\n\t\t\tthis.startCheckingTyping()\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tstartCheckingTyping\r\n\t*\tStart an interval that checks if the user is typing.\r\n\t*/\r\n\tstartCheckingTyping = ()=>{\r\n\t\tthis.typingInterval = setInterval(()=>{\r\n\t\t\tif((Date.now() - this.lastUpdateTime) > 300){\r\n\t\t\t\tthis.setState({isTyping:false})\r\n\t\t\t\tthis.stopCheckingTyping()\r\n\t\t\t}\r\n\t\t}, 300)\r\n\t}\r\n\t\r\n\t/*\r\n\t*\tstopCheckingTyping\r\n\t*\tStart the interval from checking if the user is typing.\r\n\t*/\r\n\tstopCheckingTyping = ()=>{\r\n\t\tif(this.typingInterval){\r\n\t\t\tclearInterval(this.typingInterval)\r\n\t\t\tthis.props.sendTyping(false)\r\n\t\t}\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { message } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"message-input\">\r\n\t\t\t\t<form \r\n\t\t\t\t\tonSubmit={ this.handleSubmit }\r\n\t\t\t\t\tclassName=\"message-form\">\r\n\r\n\t\t\t\t\t<input \r\n\t\t\t\t\t\tid = \"message\"\r\n\t\t\t\t\t\tref = {\"messageinput\"}\r\n\t\t\t\t\t\ttype = \"text\"\r\n\t\t\t\t\t\tclassName = \"form-control\"\r\n\t\t\t\t\t\tvalue = { message }\r\n\t\t\t\t\t\tautoComplete = {'off'}\r\n\t\t\t\t\t\tplaceholder = \"Type here\"\r\n\t\t\t\t\t\tonKeyUp = { e => { e.keyCode !== 13 && this.sendTyping() } }\r\n\t\t\t\t\t\tonChange = {\r\n\t\t\t\t\t\t\t({target})=>{\r\n\t\t\t\t\t\t\t\tthis.setState({message:target.value})\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tdisabled = { message.length < 1 }\r\n\t\t\t\t\t\ttype = \"submit\"\r\n\t\t\t\t\t\tclassName = \"send\"\r\n\r\n\t\t\t\t\t> Send </button>\r\n\t\t\t\t</form>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport SideBar from '../sidebar/SideBar'\r\nimport { COMMUNITY_CHAT, MESSAGE_SENT, MESSAGE_RECIEVED,\r\n\t TYPING, PRIVATE_MESSAGE, USER_CONNECTED, USER_DISCONNECTED,\r\n\tNEW_CHAT_USER } from '../../Events'\r\nimport ChatHeading from './ChatHeading'\r\nimport Messages from '../messages/Messages'\r\nimport MessageInput from '../messages/MessageInput'\r\nimport { values, difference, differenceBy } from 'lodash'\r\n\r\n\r\nexport default class ChatContainer extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\t\r\n\t\r\n\t  this.state = {\r\n\t\t  chats:[],\r\n\t\t  users:[],\r\n\t\t  activeChat:null\r\n\t  };\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tconst { socket } = this.props\r\n\t\tthis.initSocket(socket)\r\n\t}\r\n\tcomponentWillUnmount(){\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.off( PRIVATE_MESSAGE )\r\n\t\tsocket.off( USER_CONNECTED )\r\n\t\tsocket.off( USER_DISCONNECTED )\r\n\t\tsocket.off(NEW_CHAT_USER)\r\n\t}\r\n\tinitSocket(socket){\r\n\r\n\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\tsocket.on(PRIVATE_MESSAGE, this.addChat)\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tsocket.emit(COMMUNITY_CHAT, this.resetChat)\r\n\t\t})\r\n\t\tsocket.on(USER_CONNECTED, (users) =>{\r\n\t\t\tthis.setState({ users:values(users) })\r\n\r\n\t\t})\r\n\t\tsocket.on(USER_DISCONNECTED, (users)=>{\r\n\t\t\tconst removedUsers = differenceBy( this.state.users, values(users), 'id')\r\n\t\t\tthis.removeUsersFromChat(removedUsers)\r\n\t\t\tthis.setState({ users:values(users) })\r\n\t\t})\r\n\t\tsocket.on(NEW_CHAT_USER, this.addUserToChat)\r\n\t}\r\n\r\n\tsendOpenPrivateMessage = (reciever) => {\r\n\t\tconst { socket, user } = this.props\r\n\t\tconst { activeChat } = this.state\r\n\t\tsocket.emit(PRIVATE_MESSAGE, {reciever, sender:user.name, activeChat})\r\n\t}\r\n\taddUserToChat = ({ chatId, newUser }) => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map( chat => {\r\n\t\t\tif(chat.id === chatId){\r\n\t\t\t\treturn Object.assign({}, chat, {users: [ ...chat.users, newUser ] })\r\n\t\t\t}\r\n\t\t\treturn chat\r\n\t\t})\r\n\t\tthis.setState({ chats:newChats })\r\n\t}\r\n\tremoveUsersFromChat = removedUsers => {\r\n\t\tconst { chats } = this.state\r\n\t\tconst newChats = chats.map( chat => {\r\n\t\t\tlet newUsers = difference( chat.users, removedUsers.map( u => u.name))\r\n\t\t\t\treturn Object.assign({}, chat, { users:newUsers})\r\n\t\t})\r\n\t\tthis.setState({ chats: newChats })\r\n\t}\r\n\t/*\r\n\t*\tReset the chat back to only the chat passed in.\r\n\t* \t@param chat {Chat}\r\n\t*/\r\n\tresetChat = (chat)=>{\r\n\t\treturn this.addChat(chat, true)\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds chat to the chat container, if reset is true removes all chats\r\n\t*\tand sets that chat to the main chat.\r\n\t*\tSets the message and typing socket events for the chat.\r\n\t*\t\r\n\t*\t@param chat {Chat} the chat to be added.\r\n\t*\t@param reset {boolean} if true will set the chat as the only chat.\r\n\t*/\r\n\taddChat = (chat, reset=false)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tconst { chats } = this.state\r\n\r\n\t\tconst newChats = reset ? [chat] : [...chats, chat]\r\n\t\tthis.setState({chats:newChats, activeChat:reset ? chat : this.state.activeChat})\r\n\r\n\t\tconst messageEvent = `${MESSAGE_RECIEVED}-${chat.id}`\r\n\t\tconst typingEvent = `${TYPING}-${chat.id}`\r\n\r\n\t\tsocket.on(typingEvent, this.updateTypingInChat(chat.id))\r\n\t\tsocket.on(messageEvent, this.addMessageToChat(chat.id))\r\n\t}\r\n\r\n\t/*\r\n\t* \tReturns a function that will \r\n\t*\tadds message to chat with the chatId passed in. \r\n\t*\r\n\t* \t@param chatId {number}\r\n\t*/\r\n\taddMessageToChat = (chatId)=>{\r\n\t\treturn message => {\r\n\t\t\tconst { chats } = this.state\r\n\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\tif(chat.id === chatId)\r\n\t\t\t\t\tchat.messages.push(message)\r\n\t\t\t\treturn chat\r\n\t\t\t})\r\n\r\n\t\t\tthis.setState({chats:newChats})\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tUpdates the typing of chat with id passed in.\r\n\t*\t@param chatId {number}\r\n\t*/\r\n\tupdateTypingInChat = (chatId) =>{\r\n\t\treturn ({isTyping, user})=>{\r\n\t\t\tif(user !== this.props.user.name){\r\n\r\n\t\t\t\tconst { chats } = this.state\r\n\r\n\t\t\t\tlet newChats = chats.map((chat)=>{\r\n\t\t\t\t\tif(chat.id === chatId){\r\n\t\t\t\t\t\tif(isTyping && !chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers.push(user)\r\n\t\t\t\t\t\t}else if(!isTyping && chat.typingUsers.includes(user)){\r\n\t\t\t\t\t\t\tchat.typingUsers = chat.typingUsers.filter(u => u !== user)\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t\treturn chat\r\n\t\t\t\t})\r\n\t\t\t\tthis.setState({chats:newChats})\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\t/*\r\n\t*\tAdds a message to the specified chat\r\n\t*\t@param chatId {number}  The id of the chat to be added to.\r\n\t*\t@param message {string} The message to be added to the chat.\r\n\t*/\r\n\tsendMessage = (chatId, message)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(MESSAGE_SENT, {chatId, message} )\r\n\t}\r\n\r\n\t/*\r\n\t*\tSends typing status to server.\r\n\t*\tchatId {number} the id of the chat being typed in.\r\n\t*\ttyping {boolean} If the user is typing still or not.\r\n\t*/\r\n\tsendTyping = (chatId, isTyping)=>{\r\n\t\tconst { socket } = this.props\r\n\t\tsocket.emit(TYPING, {chatId, isTyping})\r\n\t}\r\n\r\n\tsetActiveChat = (activeChat)=>{\r\n\t\tthis.setState({activeChat})\r\n\t}\r\n\trender() {\r\n\t\tconst { user, logout } = this.props\r\n\t\tconst { chats, activeChat, users } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t<SideBar\r\n\t\t\t\t\tlogout={logout}\r\n\t\t\t\t\tchats={chats}\r\n\t\t\t\t\tuser={user}\r\n\t\t\t\t\tusers={users}\r\n\t\t\t\t\tactiveChat={activeChat}\r\n\t\t\t\t\tsetActiveChat={this.setActiveChat}\r\n\t\t\t\t\tonSendPrivateMessage={this.sendOpenPrivateMessage}\r\n\t\t\t\t\t/>\r\n\t\t\t\t<div className=\"chat-room-container\">\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tactiveChat !== null ? (\r\n\r\n\t\t\t\t\t\t\t<div className=\"chat-room\">\r\n\t\t\t\t\t\t\t\t<ChatHeading name={activeChat.name} />\r\n\t\t\t\t\t\t\t\t<Messages \r\n\t\t\t\t\t\t\t\t\tmessages={activeChat.messages}\r\n\t\t\t\t\t\t\t\t\tuser={user}\r\n\t\t\t\t\t\t\t\t\ttypingUsers={activeChat.typingUsers}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t<MessageInput \r\n\t\t\t\t\t\t\t\t\tsendMessage={\r\n\t\t\t\t\t\t\t\t\t\t(message)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendMessage(activeChat.id, message)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\tsendTyping={\r\n\t\t\t\t\t\t\t\t\t\t(isTyping)=>{\r\n\t\t\t\t\t\t\t\t\t\t\tthis.sendTyping(activeChat.id, isTyping)\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t):\r\n\t\t\t\t\t\t<div className=\"chat-room choose\">\r\n\t\t\t\t\t\t\t<h3>Choose a chat!</h3>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT, VERIFY_USER } from '../Events'\r\nimport LoginForm from './LoginForm'\r\nimport ChatContainer from './chats/ChatContainer'\r\n\r\nconst socketUrl = \"/\"\r\nexport default class Layout extends Component {\r\n\t\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t\r\n\t  this.state = {\r\n\t  \tsocket:null,\r\n\t  \tuser:null\r\n\t  };\r\n\t}\r\n\r\n\r\n\r\n\tcomponentWillMount() {\r\n\t\tthis.initSocket()\r\n\t}\r\n\r\n\t/*\r\n\t*\tConnect to and initializes the socket.\r\n\t*/\r\n\tinitSocket = ()=>{\r\n\t\tconst socket = io(socketUrl)\r\n\r\n\t\tsocket.on('connect', ()=>{\r\n\t\t\tif(this.state.user){\r\n\t\t\t\tthis.reconnect(socket)\r\n\t\t\t}else{\r\n\t\t\t\tconsole.log(\"Connected\");\r\n\t\t\t}\r\n\t\t})\r\n\t\t\r\n\t\tthis.setState({socket})\r\n\t}\r\n\r\n\treconnect = (socket) => {\r\n\t\tsocket.emit(VERIFY_USER, this.state.user.name, ({ isUser, user })=>{\r\n\t\t\tif(isUser){\r\n\t\t\t\tthis.setState({ user: null })\r\n\t\t\t}else{\r\n\t\t\t\tthis.setUser(user)\r\n\t\t\t}\r\n\t\t})\r\n\t}\r\n\r\n\t/*\r\n\t* \tSets the user property in state \r\n\t*\t@param user {id:number, name:string}\r\n\t*/\t\r\n\tsetUser = (user)=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(USER_CONNECTED, user);\r\n\t\tthis.setState({user})\r\n\t}\r\n\r\n\t/*\r\n\tSets the user property in state to null.\r\n\t*/\r\n\tlogout = ()=>{\r\n\t\tconst { socket } = this.state\r\n\t\tsocket.emit(LOGOUT)\r\n\t\tthis.setState({user:null})\r\n\r\n\t}\r\n\r\n\r\n\trender() {\r\n\t\tconst { socket, user } = this.state\r\n\t\treturn (\r\n\t\t\t<div className=\"container\">\r\n\t\t\t\t{\r\n\t\t\t\t\t!user ?\t\r\n\t\t\t\t\t<LoginForm socket={socket} setUser={this.setUser} />\r\n\t\t\t\t\t:\r\n\t\t\t\t\t<ChatContainer socket={socket} user={user} logout={this.logout}/>\r\n\t\t\t\t}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport Layout from './components/Layout'\r\nimport './index.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n        <Layout />\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (!isLocalhost) {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      } else {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}